# Windsurf Rules for Aleph Cloud Documentation

## 1. User-Centric Documentation Principle
- All documentation and contributions must prioritize clarity, accessibility, and usability for end users above all else.
- When making changes, always consider the impact on the user's experience, including navigation, image visibility, and error-free builds.
- Instructions and examples should be written with the assumption that the reader is a user seeking to accomplish a task, not just a developer.

## 2. Image and Asset Referencing
- All image references in documentation **must use absolute paths** starting from the root `/assets/...` to ensure consistent rendering in both development and production builds.
- Relative paths with parent directory references (e.g., `../../assets/...`) are **not allowed**.
- When adding new images, place them in the appropriate subdirectory under `docs/assets/images/` and reference them using the absolute path.

## 3. Build and Error Resolution
- Documentation must always build cleanly with `npm run docs:build` and display correctly with `npm run docs:dev`.
- If a build fails due to unresolved imports (e.g., images or assets), the path must be corrected immediately to the absolute path format.
- Contributors must verify all image and asset links after changes, especially when restructuring directories or forking the project.

## 4. Versioning and Transparency
- The versioning system must remain visible to users, displaying the current version and commit in the documentation footer.
- Local development URLs must only be visible in development mode, never in production.
- Any changes to versioning scripts or display must preserve user-facing clarity and transparency.

## 5. Forking and Derivative Projects
- These rules **must be preserved** in any forks or derivative projects. The user-centric approach, image path conventions, and build requirements are mandatory for all contributors.
- Fork maintainers are responsible for ensuring all documentation changes continue to follow these rules.

## 6. Contribution Guidelines
- All pull requests and documentation updates must be reviewed for adherence to these rules.
- Any new contributor should read and acknowledge this file before submitting changes.

---

By contributing to this project (or any fork), you agree to uphold these rules to ensure the best possible experience for all users of the Aleph Cloud documentation.
